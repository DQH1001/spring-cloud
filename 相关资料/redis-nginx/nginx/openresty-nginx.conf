#user  nobody;
worker_processes  1;
error_log  logs/error.log;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    #lua 模块
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";
    #c模块
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";
    #开启共享字典，本地缓存
    lua_shared_dict item_cache 150m;

    # hash $requesr_uri:对请求路径做hash运算,只要请求路径没变，会转发到同一个实例
    # 确保同一个id被转发到同一个实例上，只使用一个实例的缓存，避免多个实例重复存缓存
    upstream tomcat_cluster {
        hash $request_uri;
        server 192.168.1.102:8081;
        server 192.168.1.102:8082;
    }

    server {
        listen       8081;
        server_name  localhost;
        # 2.请求的路径（/item/id，/item/stock/id）是不带ip的，所以只能被nginx内部监听到
        # 3.监听/item路径，将item.lua中的请求转发给tomcat服务端
        # 4.需关闭防火墙或添加入站规则
        location /item {
            proxy_pass http://tomcat_cluster;
        }

        # 1.用户访问nginxIp:8081/api/item/id,由item.lua请求/item/id，/item/stock/id路径
        location ~ /api/item/(\d+) {
            default_type application/json;
            content_by_lua_file lua/item.lua;
        }
        location / {
            root   html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}